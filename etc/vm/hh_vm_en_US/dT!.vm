## \dT[S+] [Schema]  
## List of data types
#set($common1 = "SELECT n.nspname as " + '"Schema"' +",
	  hh_catalog.format_type(t.oid, NULL) AS " + '"Name"' +",")
#set($common2 = "hh_catalog.obj_description(t.oid, 'hh_type') as " + '"Description"' +"
	FROM hh_catalog.hh_type t
	     LEFT JOIN hh_catalog.hh_namespace n ON n.oid = t.typnamespace
	WHERE (t.typrelid = 0 OR (SELECT c.relkind = 'c' FROM hh_catalog.hh_class c WHERE c.oid = t.typrelid))
	  AND NOT EXISTS(SELECT 1 FROM hh_catalog.hh_type el WHERE el.oid = t.typelem AND el.typarray = t.oid)")
#set($common3 = "AND hh_catalog.hh_type_is_visible(t.oid)
	ORDER BY 1, 2;")
#set($plus = "t.typname AS " + '"Internal name"' +",
	  CASE WHEN t.typrelid != 0
	      THEN CAST('tuple' AS hh_catalog.text)
	    WHEN t.typlen < 0
	      THEN CAST('var' AS hh_catalog.text)
	    ELSE CAST(t.typlen AS hh_catalog.text)
	  END AS " + '"Size"' +",
	  hh_catalog.array_to_string(
	      ARRAY(
			     SELECT e.enumlabel
	          FROM hh_catalog.hh_enum e
	          WHERE e.enumtypid = t.oid
	          ORDER BY e.enumsortorder
	      ),
	      E'\n'
	  ) AS " + '"Elements"' +",
	  hh_catalog.hh_get_userbyid(t.typowner) AS " + '"Owner"'+",
	hh_catalog.array_to_string(t.typacl, E'\n') AS " + '"Access privileges"' + ",")
#set($noS = "AND n.nspname <> 'hh_catalog'
	      AND n.nspname <> 'information_schema'")
#set($patt = "AND (t.typname ~ '^($arg)$'
	        OR hh_catalog.format_type(t.oid, NULL) ~ '^($arg)$')")
$common1
#if($cmdSql.indexOf('+') > 0)
$plus
#end
$common2
#if($cmdSql.indexOf('S') < 0)
#if($arg)
$patt
#else
$noS
#end
#else
#if($arg)
$patt
#end
#end
$common3
