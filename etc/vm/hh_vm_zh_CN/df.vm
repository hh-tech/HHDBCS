## \df[S+] [Schema] 
## List[collect aggregate/normal/trigger/window]function
#set($common1 = "SELECT n.nspname as " + '"架构模式"' +",
	  p.proname as " + '"名称"' +",
	  hh_catalog.hh_get_function_result(p.oid) as " + '"结果数据类型"' +",
	  hh_catalog.hh_get_function_arguments(p.oid) as " + '"参数数据类型"' +",
	 CASE
	  WHEN p.proisagg THEN 'agg'
	  WHEN p.proiswindow THEN 'window'
	  WHEN p.prorettype = 'hh_catalog.trigger'::hh_catalog.regtype THEN 'trigger'
	  ELSE 'normal'
	 END as " + '"类型"')
#set($common2 = "FROM hh_catalog.hh_proc p
	     LEFT JOIN hh_catalog.hh_namespace n ON n.oid = p.pronamespace")
#set($common3 = "WHERE hh_catalog.hh_function_is_visible(p.oid)")
#set($common4 = "ORDER BY 1, 2, 4;")
#set($plus1 = ",CASE WHEN prosecdef THEN 'definer' ELSE 'invoker' END AS " + '"安全"' +",
	 CASE
	  WHEN p.provolatile = 'i' THEN 'immutable'
	  WHEN p.provolatile = 's' THEN 'stable'
	  WHEN p.provolatile = 'v' THEN 'volatile'
	 END as " + '"挥发性"' +",
	  CASE
	  WHEN p.proparallel = 'r' THEN 'restricted'
	  WHEN p.proparallel = 's' THEN 'safe'
	  WHEN p.proparallel = 'u' THEN 'unsafe'
	 END as 平行,
	  hh_catalog.hh_get_userbyid(p.proowner) as " + '"拥有者"' +",
	 hh_catalog.array_to_string(p.proacl, E'\n') AS "+'"存取权限"'+",
	  l.lanname as " + '"程序语言"' +",
	  p.prosrc as " + '"原始程式"' +",
	  hh_catalog.obj_description(p.oid, 'hh_proc') as " + '"描述"')
#set($plus2 = "LEFT JOIN hh_catalog.hh_language l ON l.oid = p.prolang")
#set($noS = "AND n.nspname <> 'hh_catalog'
	      AND n.nspname <> 'information_schema'")
#set($patt = "AND p.proname ~ '^($arg)$'")
$common1
#if($cmdSql.indexOf('+') > 0)
$plus1
#end
$common2
#if($cmdSql.indexOf('+') > 0)
$plus2
#end
$common3
#if($cmdSql.indexOf('S') < 0)
#if($arg)
$patt
#else
$noS
#end
#else
#if($arg)
$patt
#end
#end
$common4
