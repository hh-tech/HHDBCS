## \dd[S]  [PATTERN]      
## Object descriptions
#set($common1="SELECT DISTINCT tt.nspname AS "+'"Schema"'+", tt.name AS "+'"Name"'+", tt.object AS "+'"Object"'+", d.description AS "+'"Description"'+"
	FROM (
	  SELECT pgc.oid as oid, pgc.tableoid AS tableoid,
	  n.nspname as nspname,
	  CAST(pgc.conname AS pg_catalog.text) as name,  CAST('table constraint' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_constraint pgc
	    JOIN pg_catalog.pg_class c ON c.oid = pgc.conrelid
	    LEFT JOIN pg_catalog.pg_namespace n     ON n.oid = c.relnamespace
	WHERE n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	UNION ALL
	  SELECT pgc.oid as oid, pgc.tableoid AS tableoid,
	  n.nspname as nspname,
	  CAST(pgc.conname AS pg_catalog.text) as name,  CAST('domain constraint' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_constraint pgc
	    JOIN pg_catalog.pg_type t ON t.oid = pgc.contypid
	    LEFT JOIN pg_catalog.pg_namespace n     ON n.oid = t.typnamespace
	WHERE n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	  AND pg_catalog.pg_type_is_visible(t.oid)
	UNION ALL
	  SELECT o.oid as oid, o.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(o.opcname AS pg_catalog.text) as name,
	  CAST('operator class' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_opclass o
	    JOIN pg_catalog.pg_am am ON o.opcmethod = am.oid
	    JOIN pg_catalog.pg_namespace n ON n.oid = o.opcnamespace
	      AND n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	  AND pg_catalog.pg_opclass_is_visible(o.oid)
	UNION ALL
	  SELECT opf.oid as oid, opf.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(opf.opfname AS pg_catalog.text) AS name,
	  CAST('operator family' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_opfamily opf
	    JOIN pg_catalog.pg_am am ON opf.opfmethod = am.oid
	    JOIN pg_catalog.pg_namespace n ON opf.opfnamespace = n.oid
	      AND n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	  AND pg_catalog.pg_opfamily_is_visible(opf.oid)
	UNION ALL
	  SELECT r.oid as oid, r.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(r.rulename AS pg_catalog.text) as name,  CAST('rule' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_rewrite r
	       JOIN pg_catalog.pg_class c ON c.oid = r.ev_class
	       LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	  WHERE r.rulename != '_RETURN'
	      AND n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	UNION ALL
	  SELECT t.oid as oid, t.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(t.tgname AS pg_catalog.text) as name,  CAST('trigger' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_trigger t
	       JOIN pg_catalog.pg_class c ON c.oid = t.tgrelid
	       LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	) AS tt
	  JOIN pg_catalog.pg_description d ON (tt.oid = d.objoid AND tt.tableoid = d.classoid AND d.objsubid = 0)
	ORDER BY 1, 2, 3;
")
#set($common2="SELECT DISTINCT tt.nspname AS "+'"Schema"'+", tt.name AS "+'"Name"'+", tt.object AS "+'"Object"'+", d.description AS "+'"Description"'+"
	FROM (
	  SELECT pgc.oid as oid, pgc.tableoid AS tableoid,
	  n.nspname as nspname,
	  CAST(pgc.conname AS pg_catalog.text) as name,  CAST('table constraint' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_constraint pgc
	    JOIN pg_catalog.pg_class c ON c.oid = pgc.conrelid
	    LEFT JOIN pg_catalog.pg_namespace n     ON n.oid = c.relnamespace
	WHERE pgc.conname OPERATOR(pg_catalog.~) '^($arg)$'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	UNION ALL
	  SELECT pgc.oid as oid, pgc.tableoid AS tableoid,
	  n.nspname as nspname,
	  CAST(pgc.conname AS pg_catalog.text) as name,  CAST('domain constraint' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_constraint pgc
	    JOIN pg_catalog.pg_type t ON t.oid = pgc.contypid
	    LEFT JOIN pg_catalog.pg_namespace n     ON n.oid = t.typnamespace
	WHERE pgc.conname OPERATOR(pg_catalog.~) '^($arg)$'
	  AND pg_catalog.pg_type_is_visible(t.oid)
	UNION ALL
	  SELECT o.oid as oid, o.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(o.opcname AS pg_catalog.text) as name,
	  CAST('operator class' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_opclass o
	    JOIN pg_catalog.pg_am am ON o.opcmethod = am.oid
	    JOIN pg_catalog.pg_namespace n ON n.oid = o.opcnamespace
	  AND o.opcname OPERATOR(pg_catalog.~) '^($arg)$'
	  AND pg_catalog.pg_opclass_is_visible(o.oid)
	UNION ALL
	  SELECT opf.oid as oid, opf.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(opf.opfname AS pg_catalog.text) AS name,
	  CAST('operator family' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_opfamily opf
	    JOIN pg_catalog.pg_am am ON opf.opfmethod = am.oid
	    JOIN pg_catalog.pg_namespace n ON opf.opfnamespace = n.oid
	  AND opf.opfname OPERATOR(pg_catalog.~) '^($arg)$'
	  AND pg_catalog.pg_opfamily_is_visible(opf.oid)
	UNION ALL
	  SELECT r.oid as oid, r.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(r.rulename AS pg_catalog.text) as name,  CAST('rule' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_rewrite r
	       JOIN pg_catalog.pg_class c ON c.oid = r.ev_class
	       LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	  WHERE r.rulename != '_RETURN'
	  AND r.rulename OPERATOR(pg_catalog.~) '^($arg)$'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	UNION ALL
	  SELECT t.oid as oid, t.tableoid as tableoid,
	  n.nspname as nspname,
	  CAST(t.tgname AS pg_catalog.text) as name,  CAST('trigger' AS pg_catalog.text) as object
	  FROM pg_catalog.pg_trigger t
	       JOIN pg_catalog.pg_class c ON c.oid = t.tgrelid
	       LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE t.tgname OPERATOR(pg_catalog.~) '^($arg)$'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	) AS tt
	  JOIN pg_catalog.pg_description d ON (tt.oid = d.objoid AND tt.tableoid = d.classoid AND d.objsubid = 0)
	ORDER BY 1, 2, 3;")
#if($arg)
$common2
#else
$common1
#end