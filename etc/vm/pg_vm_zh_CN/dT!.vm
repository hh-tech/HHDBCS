## \dT[S+] [Schema]  
## List of data types
#set($common1 = "SELECT n.nspname as " + '"架构模式"' +",
	  pg_catalog.format_type(t.oid, NULL) AS " + '"名称"' +",")
#set($common2 = "pg_catalog.obj_description(t.oid, 'pg_type') as " + '"描述"' +"
	FROM pg_catalog.pg_type t
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace
	WHERE (t.typrelid = 0 OR (SELECT c.relkind = 'c' FROM pg_catalog.pg_class c WHERE c.oid = t.typrelid))
	  AND NOT EXISTS(SELECT 1 FROM pg_catalog.pg_type el WHERE el.oid = t.typelem AND el.typarray = t.oid)")
#set($common3 = "AND pg_catalog.pg_type_is_visible(t.oid)
	ORDER BY 1, 2;")
#set($plus = "t.typname AS " + '"内部名称"' +",
	  CASE WHEN t.typrelid != 0
	      THEN CAST('tuple' AS pg_catalog.text)
	    WHEN t.typlen < 0
	      THEN CAST('var' AS pg_catalog.text)
	    ELSE CAST(t.typlen AS pg_catalog.text)
	  END AS " + '"大小"' +",
	  pg_catalog.array_to_string(
	      ARRAY(
			     SELECT e.enumlabel
	          FROM pg_catalog.pg_enum e
	          WHERE e.enumtypid = t.oid
	          ORDER BY e.enumsortorder
	      ),
	      E'\n'
	  ) AS " + '"成员"' +",
	  pg_catalog.pg_get_userbyid(t.typowner) AS " + '"拥有者"'+",
	pg_catalog.array_to_string(t.typacl, E'\n') AS " + '"存取权限"' + ",")
#set($noS = "AND n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'")
#set($patt = "AND (t.typname ~ '^($arg)$'
	        OR pg_catalog.format_type(t.oid, NULL) ~ '^($arg)$')")
$common1
#if($cmdSql.indexOf('+') > 0)
$plus
#end
$common2
#if($cmdSql.indexOf('S') < 0)
#if($arg)
$patt
#else
$noS
#end
#else
#if($arg)
$patt
#end
#end
$common3
